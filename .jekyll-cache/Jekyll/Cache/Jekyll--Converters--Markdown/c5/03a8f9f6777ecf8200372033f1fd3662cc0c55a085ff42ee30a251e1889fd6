I":<ul id="markdown-toc">
  <li><a href="#动手实践模板" id="markdown-toc-动手实践模板">动手实践模板</a></li>
</ul>

<h3 id="动手实践模板">动手实践模板</h3>

<p>C++ 模板可以做以下事情：编译期数值计算、类型计算、代码计算（如循环展开），其中数值计算实际不太有意义，
而类型计算和代码计算可以使得代码更加通用，更加易用，性能更好（也更难阅读，更难调试，有时也会有代码膨胀问题）</p>

<p><strong>源码：</strong></p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
</pre></td><td class="rouge-code"><pre>
<span class="cm">/**************************************************
* Author:Q&amp;H
* Time:2018.5.10
* Source: 
* Describe: 
**************************************************/</span>
<span class="cp">#include &lt;iostream&gt;
</span><span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="nc">T</span><span class="p">&gt;</span>			<span class="c1">//1. 函数模板</span>
<span class="n">T</span> <span class="nf">Compare</span><span class="p">(</span><span class="n">T</span> <span class="n">a</span><span class="p">,</span> <span class="n">T</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">T</span> <span class="n">res</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span> <span class="o">?</span> <span class="n">a</span> <span class="o">:</span> <span class="n">b</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">res</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">SrcOpertClass</span>				<span class="c1">//2.类模板</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="kt">int</span> <span class="n">Add</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span> <span class="p">){</span> <span class="k">return</span>  <span class="n">a</span> <span class="o">+</span><span class="n">b</span> <span class="p">;}</span>
	<span class="kt">int</span> <span class="n">Multi</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span> <span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">){</span><span class="k">return</span>  <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="p">;}</span>
	<span class="kt">double</span> <span class="n">Add</span><span class="p">(</span><span class="kt">double</span> <span class="n">a</span><span class="p">,</span> <span class="kt">double</span> <span class="n">b</span> <span class="p">){</span> <span class="k">return</span>  <span class="n">a</span> <span class="o">+</span><span class="n">b</span> <span class="p">;}</span>
	<span class="kt">double</span> <span class="n">Multi</span><span class="p">(</span><span class="kt">double</span> <span class="n">a</span> <span class="p">,</span> <span class="kt">double</span> <span class="n">b</span><span class="p">){</span><span class="k">return</span>  <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="p">;}</span>
<span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="nc">T</span><span class="p">&gt;</span>	
<span class="k">class</span> <span class="nc">TempOpertClass</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="n">T</span> <span class="n">Add</span><span class="p">(</span><span class="n">T</span> <span class="n">a</span><span class="p">,</span> <span class="n">T</span> <span class="n">b</span> <span class="p">){</span> <span class="k">return</span>  <span class="n">a</span> <span class="o">+</span><span class="n">b</span> <span class="p">;}</span>		<span class="c1">// 模板代替 -- 函数重载</span>
	<span class="n">T</span> <span class="n">Multi</span><span class="p">(</span><span class="n">T</span> <span class="n">a</span> <span class="p">,</span> <span class="n">T</span> <span class="n">b</span><span class="p">){</span><span class="k">return</span>  <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="p">;}</span>
<span class="p">};</span>
<span class="c1">/////////////////////////////////////////////// 3. 模板特例化</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="nc">T</span><span class="p">,</span> <span class="kt">int</span> <span class="n">N</span><span class="p">&gt;</span>				<span class="c1">// 通例</span>
<span class="k">class</span> <span class="nc">Vector</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="n">T</span> <span class="n">_v</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
<span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="p">&gt;</span>				<span class="c1">// 特例化1</span>
<span class="k">class</span> <span class="nc">Vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span> <span class="mi">4</span><span class="o">&gt;</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="kt">double</span> <span class="n">_v</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
<span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">N</span><span class="p">&gt;</span>			<span class="c1">// 特例化2</span>
<span class="k">class</span> <span class="nc">Vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span> <span class="n">N</span><span class="o">&gt;</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="kt">double</span> <span class="n">_v</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
<span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="nc">T</span><span class="p">&gt;</span>	<span class="c1">// 特例化3</span>
<span class="k">class</span> <span class="nc">Vector</span><span class="o">&lt;</span><span class="n">T</span><span class="p">,</span> <span class="mi">888</span><span class="o">&gt;</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="n">T</span> <span class="n">_v</span><span class="p">[</span><span class="mi">888</span><span class="p">];</span>
<span class="p">};</span>
<span class="kt">int</span> <span class="nf">T_templedemo</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span> <span class="n">Compare</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">10</span> <span class="p">,</span> <span class="mi">8</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>	<span class="c1">// 函数模板</span>
	<span class="n">SrcOpertClass</span> <span class="n">soc</span><span class="p">;</span>					<span class="c1">// 类模板s</span>
	<span class="n">TempOpertClass</span> <span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">toc</span><span class="p">;</span>			
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">soc</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="mf">10.1</span> <span class="p">,</span> <span class="mf">25.6</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">toc</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">29</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>

	<span class="k">const</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
	<span class="n">Vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="n">N</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">;</span>					<span class="c1">// 通例</span>
	<span class="n">vec</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">vec</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>

	<span class="n">Vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span><span class="mi">4</span><span class="o">&gt;</span> <span class="n">vec_1</span><span class="p">;</span>				<span class="c1">// 类型，数组大小都不变</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">vec_1</span><span class="p">.</span><span class="n">_v</span><span class="p">)</span><span class="o">/</span><span class="k">sizeof</span><span class="p">(</span><span class="n">vec_1</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">++</span><span class="p">)</span>
	<span class="n">vec_1</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mf">10.11</span><span class="p">;</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">vec_1</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">89</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>			<span class="c1">// 数组越界</span>

	<span class="n">Vector</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span> <span class="mi">10</span><span class="o">&gt;</span> <span class="n">vec_2</span><span class="p">;</span>			<span class="c1">// 模板特例化2	类型不变，数组大小改变</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">vec_2</span><span class="p">.</span><span class="n">_v</span><span class="p">)</span><span class="o">/</span><span class="k">sizeof</span><span class="p">(</span><span class="n">vec_2</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">++</span><span class="p">)</span>
	<span class="n">vec_2</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mf">10.11</span><span class="p">;</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">vec_2</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>

	<span class="n">Vector</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">888</span><span class="o">&gt;</span> <span class="n">vec_3</span><span class="p">;</span>	<span class="c1">// 模板特例化3  类型改变,数组大小固定</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">vec_3</span><span class="p">.</span><span class="n">_v</span><span class="p">)</span><span class="o">/</span><span class="k">sizeof</span><span class="p">(</span><span class="n">vec_3</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">++</span><span class="p">)</span>
	<span class="n">vec_3</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">11</span><span class="p">;</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">vec_3</span><span class="p">.</span><span class="n">_v</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
	
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Result:
<img src="https://raw.githubusercontent.com/7huang/Utility/master/img-source/temple_1.png" alt="" /></p>

:ET